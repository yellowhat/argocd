---
prometheusRule:
  enabled: true

argo-cd:
  nameOverride: argo-cd

  global:
    # domain: argo-cd.mukka.haus
    logging:
      format: text
      level: warn

  configs:
    cm:
      timeout.reconciliation: 3600s
      timeout.hard.reconciliation: 86400s
      # Enable 'argocd.argoproj.io/sync-wave' annotation
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
            local syncStatus = (obj.status.sync and obj.status.sync.status or nil)
            if hs.status == "Healthy" and syncStatus ~= "Synced" then
              hs.status = "Progressing"
            end
          end
        end
        return hs
      # Not sure why, but only tailscale's manifest shows "Out of sync" for the Cilium identity
      resource.exclusions: |
        - apiGroups:
            - cilium.io
          kinds:
            - CiliumIdentity
          clusters:
            - "*"
    # cmp:
    #   create: true
    #   plugins:
    #     kustomized-helm:
    #       version: v1.0
    #       init:
    #         command: ["/bin/sh", "-c"]
    #         args: ["helm dependency update"]
    #       generate:
    #         command: ["/bin/sh", "-c"]
    #         args:
    #           - "helm template \
    #                 $ARGOCD_APP_NAME \
    #                 . \
    #                 --namespace $ARGOCD_APP_NAMESPACE \
    #                 --include-crds \
    #                 >all.yaml &&
    #                 kustomize build"
    #       discover:
    #         fileName: "kustomization.yaml"
    params:
      # TLS termination on ingress
      server.insecure: true
      # Disable authentication
      server.disable.auth: true

  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  dex:
    enabled: false

  notifications:
    enabled: false

  redis:
    enabled: true
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  redis-ha:
    enabled: false

  repoServer:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    # extraContainers:
    #   - name: cmp-kustomized-helm
    #     command:
    #       - /var/run/argocd/argocd-cmp-server
    #     # Use argocd as it contains helm and kustomize
    #     image: quay.io/argoproj/argocd:latest
    #     securityContext:
    #       runAsNonRoot: true
    #       runAsUser: 999
    #     env:
    #       - name: HELM_CACHE_HOME
    #         value: /helm-working-dir
    #       - name: HELM_CONFIG_HOME
    #         value: /helm-working-dir
    #       - name: HELM_DATA_HOME
    #         value: /helm-working-dir
    #     volumeMounts:
    #       - name: var-files
    #         mountPath: /var/run/argocd
    #       - name: plugins
    #         mountPath: /home/argocd/cmp-server/plugins
    #       - name: argocd-cmp-cm
    #         mountPath: /home/argocd/cmp-server/config/plugin.yaml
    #         subPath: kustomized-helm.yaml
    #       - name: cmp-tmp
    #         mountPath: /tmp
    #       # - name: helm-working-dir
    #       - name: helm-temp-dir
    #         mountPath: /helm-working-dir
    # volumes:
    #   - name: argocd-cmp-cm
    #     configMap:
    #       name: argocd-cmp-cm
    #   - name: cmp-tmp
    #     emptyDir: {}
    #   # avoid to share the volume helm-working-dir
    #   - name: helm-temp-dir
    #     emptyDir: {}

  server:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    service:
      annotations:
        datree.skip/SERVICE_INCORRECT_TYPE_VALUE_NODEPORT: Required for debug purpose
      type: NodePort
      nodePortHttp: 30080
    ingress:
      enabled: true
      ingressClassName: cilium
      annotations:
        kubernetes.io/tls-acme: "true"
      tls: true
